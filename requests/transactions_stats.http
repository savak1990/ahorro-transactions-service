# Transaction expenses/income statistics agregation endpoints

@baseUrl=http://localhost:8080

# Authentication token - get this by running:
# make get-cognito-token
@authToken=test

# Test data IDs - Based on seed data
@userId1=99bb2200-0011-2233-4455-667788990011
@userId2=99bb3300-0011-2233-4455-667788990022
@groupId=88aa1100-0011-2233-4455-667788990011

# Balance IDs from seed data
@balanceId1=ba001111-1111-1111-1111-111111111111  # BBVA Main Account
@balanceId2=ba002222-2222-2222-2222-222222222222  # Santander Savings
@balanceId3=ba004444-4444-4444-4444-444444444444  # Cash Wallet
@balanceId4=ba007777-7777-7777-7777-777777777777  # Secondary user account

# Merchant IDs from seed data
@mercadonaId=4e001234-1234-5678-9abc-def012345678
@starbucksId=4e007890-789a-bcde-f012-345678901234
@uberId=4e00c0c0-cdef-0123-4567-890123456789
@netflixId=4e001111-1234-5678-9abc-345678901234

# Category IDs from seed data
@categoryId=ca001111-1111-1111-1111-111111111111  # Food & Groceries
@categoryGroupId=cg001111-1111-1111-1111-111111111111

### Docs
# This endpoint retrieves transaction statistics (expenses/income) for a specific balance within a given time range.
# It aggregates the total amount and count of transactions, optionally filtering by type (expense/income).

# Params
# - balanceId - count only transactions for this one balanceId
# - categoryId - count only transactions for this specific categoryId
# - categoryGroupId - count only transactions for this specific categoryGroupId
# - merchantId - count only transactions for this merchantId
# - userId - count only transactions for this user
# - groupId - count only transactions for this user
# - type - If type is not specified, will be returned for both: income and expenses
# - currency - return data in a specified currency (futured, do not implement now)
# - startTime - date start (UTC)
# - endTime - date end (UTC)

### Get expenses by balanceId in a time range, expenses only
GET {{baseUrl}}/transactions/stats?balanceId={{balanceId1}}&startTime=2024-01-01T00:00:00Z&endTime=2024-12-31T23:59:59Z&type=expense
Authorization: Bearer {{authToken}}

# The returned object can look like this
# {
#   "expenses": {
#      "EUR": {
#        "amount": 10500,
#        "transactionsCount": 5,
#        "transactionEntiesCount": 10
#      },
#      "totalAmount": 10500,
#      "totalTransactionsCount": 5,
#      "totalTransactionEntriesCount" : 10
#   }
# }

### Get stats for user for expenses or/and incomes for specific 
# category group and merchant (e.g. Mercadona) in a date range between 
# start time and now
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&categoryGroupId={{categoryGroupId}}&merchantId={{mercadonaId}}&startTime=2024-01-01T00:00:00Z&currency=EUR
Authorization: Bearer {{authToken}}

# The returned object can look like this
# {
#   "expenses": {
#      "EUR": {
#        "amount": 10500,
#        "transactionsCount": 5,
#        "transactionEntiesCount": 10
#      },
#      "USD": {
#        "amount": 5600,
#        "transactionsCount": 2,
#        "transactionEntiesCount": 3
#      },
#      "totalAmount": 16100, # cannot be calculated for now. Need api call to convert currencies
#      "currency": "EUR",
#      "totalTransactionsCount": 7,
#      "totalTransactionEntriesCount" : 20
#   }
# }

### Get stats for all transactions in a specific balance (BBVA Main Account)
GET {{baseUrl}}/transactions/stats?balanceId={{balanceId1}}&startTime=2024-01-01T00:00:00Z&endTime=2024-12-31T23:59:59Z
Authorization: Bearer {{authToken}}

### Get income-only stats for user across all balances
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&type=income&startTime=2024-01-01T00:00:00Z
Authorization: Bearer {{authToken}}

### Get stats for Starbucks transactions only
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&merchantId={{starbucksId}}&startTime=2024-01-01T00:00:00Z
Authorization: Bearer {{authToken}}

### Get stats for specific category (food & groceries)
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&categoryId={{categoryId}}&startTime=2024-01-01T00:00:00Z
Authorization: Bearer {{authToken}}

### Get stats for secondary user transactions
GET {{baseUrl}}/transactions/stats?userId={{userId2}}&balanceId={{balanceId4}}&startTime=2024-01-01T00:00:00Z
Authorization: Bearer {{authToken}}

### Get group-wide stats (all users in the group)
GET {{baseUrl}}/transactions/stats?groupId={{groupId}}&startTime=2024-01-01T00:00:00Z&endTime=2024-12-31T23:59:59Z
Authorization: Bearer {{authToken}}

### Get stats with new "init" transaction type (for balance initialization)
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&type=init&startTime=2024-01-01T00:00:00Z
Authorization: Bearer {{authToken}}

### Get stats for transportation-related expenses (Uber)
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&merchantId={{uberId}}&type=expense&startTime=2024-01-01T00:00:00Z
Authorization: Bearer {{authToken}}

### Get current month stats for subscription services (Netflix)
GET {{baseUrl}}/transactions/stats?userId={{userId1}}&merchantId={{netflixId}}&startTime=2024-12-01T00:00:00Z&endTime=2024-12-31T23:59:59Z
Authorization: Bearer {{authToken}}
