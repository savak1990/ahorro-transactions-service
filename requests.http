@baseUrl=localhost:8080
@authToken=<PASTE TOKEN HERE>
@userId=02c514a4-2021-708d-efff-ea6cd5e4eac9
@groupId=6a785a55-fced-4f13-af78-5c19a39c9abc
@balanceId=847ac10b-58cc-4372-a567-0e02b2c3d479

### Info
GET {{baseUrl}}/info

### Health Check
GET {{baseUrl}}/health

# To get auth token, use the following command:
# aws cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --client-id 4jnf5pcfr7gvo2vseif36bu6k --auth-parameters USERNAME=<user>,PASSWORD=<password>

# Available Category IDs (from seed data):
# c47ac10b-58cc-4372-a567-0e02b2c3d479 - "Groceries" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d480 - "Restaurants" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d481 - "Fast Food" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d482 - "Coffee & Tea" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d485 - "Clothing" (Shopping)
# c47ac10b-58cc-4372-a567-0e02b2c3d486 - "Electronics" (Shopping)
# c47ac10b-58cc-4372-a567-0e02b2c3d48c - "Taxi & Rideshare" (Transportation)
# c47ac10b-58cc-4372-a567-0e02b2c3d493 - "Streaming Services" (Entertainment)
# c47ac10b-58cc-4372-a567-0e02b2c3d4a3 - "Salary" (Income)

### Create a new transaction with multiple entries
POST {{baseUrl}}/balances/{{balanceId}}/transactions
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "balanceId": "{{balanceId}}",
    "type": "expense",
    "merchant": "Mercadona",
    "operationId": null,
    "transactedAt": "2024-06-19T12:00:00Z",
    "transactionEntries": [
        {
            "description": "Organic vegetables and fruits",
            "amount": 45.50,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d479"
        },
        {
            "description": "Household cleaning supplies",
            "amount": 28.75,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d487"
        },
        {
            "description": "Personal care products",
            "amount": 15.25,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d4a2"
        }
    ]
}

### Create a simple single-entry transaction
POST {{baseUrl}}/balances/{{balanceId}}/transactions
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "balanceId": "{{balanceId}}",
    "type": "income",
    "merchant": "Acme Corp Payroll",
    "approvedAt": "2024-06-19T09:00:00Z",
    "transactedAt": "2024-06-19T09:00:00Z",
    "transactionEntries": [
        {
            "description": "Monthly salary",
            "amount": 3500.00,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d484"
        }
    ]
}

### Create a movement transaction (transfer between accounts)
POST {{baseUrl}}/balances/{{balanceId}}/transactions
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "balanceId": "{{balanceId}}",
    "type": "movement",
    "merchant": null,
    "approvedAt": "2024-06-19T14:30:00Z",
    "transactedAt": "2024-06-19T14:30:00Z",
    "transactionEntries": [
        {
            "description": "Transfer to savings account",
            "amount": 500.00,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d4b1"
        }
    ]
}

### ============================================================
### TRANSACTION LISTING ENDPOINTS (Returns TransactionEntryDto)
### ============================================================
### The GET /transactions endpoint returns flattened transaction entries
### Each entry includes:
### - Transaction details (id, type, merchant, dates)
### - Balance details (title, currency)
### - Category details (name, image)
### - Entry-specific details (description, amount)
###
### Supported query parameters:
### - user_id: Filter by user ID
### - group_id: Filter by group ID  
### - type: Filter by transaction type (income, expense, movement)
### - category: Filter by category name
### - sorted_by: Sort field (transacted_at, amount, created_at)
### - order: Sort order (ASC, DESC)
### - count: Number of items per page (max 100, default 50)
### - startKey: Cursor for pagination (use nextKey from previous response)

### List transaction entries for a specific balance (basic)
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries with all filters
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&group_id={{groupId}}&type=expense&category=Groceries&sorted_by=transacted_at&order=DESC&count=10
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries by type (income only)
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&type=income
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries by type (expense only)
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&type=expense
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries by category
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&category=Groceries
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries sorted by amount (ascending)
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&sorted_by=amount&order=ASC&count=5
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries sorted by creation date (descending)
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&sorted_by=created_at&order=DESC&count=20
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries with pagination
GET {{baseUrl}}/balances/{{balanceId}}/transactions?user_id={{userId}}&count=5
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries for specific group
GET {{baseUrl}}/balances/{{balanceId}}/transactions?group_id={{groupId}}&count=10
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Get a specific transaction
GET {{baseUrl}}/balances/{{balanceId}}/transactions/REPLACE_WITH_TRANSACTION_ID
Authorization: Bearer {{authToken}}

### Update a transaction
PUT {{baseUrl}}/balances/{{balanceId}}/transactions/REPLACE_WITH_TRANSACTION_ID
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "type": "expense",
    "amount": 120.00,
    "balanceId": "{{balanceId}}",
    "category": "Groceries",
    "description": "Updated groceries",
    "transactedAt": "2024-06-19T12:00:00Z"
}

### Delete a transaction
DELETE {{baseUrl}}/balances/{{balanceId}}/transactions/REPLACE_WITH_TRANSACTION_ID
Authorization: Bearer {{authToken}}

### Create a new balance
POST {{baseUrl}}/balances
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "currency": "EUR",
    "title": "Main Checking Account",
    "description": "Primary bank account for daily expenses"
}

### List balances for group
GET {{baseUrl}}/balances?group_id={{groupId}}
Authorization: Bearer {{authToken}}

### List balances for user
GET {{baseUrl}}/balances?user_id={{userId}}
Authorization: Bearer {{authToken}}

### Get a specific balance
GET {{baseUrl}}/balances/{{balanceId}}
Authorization: Bearer {{authToken}}

### Update a balance
PUT {{baseUrl}}/balances/{{balanceId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "currency": "EUR",
    "title": "Updated Checking Account",
    "description": "Updated primary bank account for daily expenses"
}

### Delete a balance
DELETE {{baseUrl}}/balances/{{balanceId}}
Authorization: Bearer {{authToken}}

### Create a new category
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "name": "Restaurants",
    "imageUrl": "https://example.com/restaurant-icon.png"
}

### List categories
GET {{baseUrl}}/categories?user_id={{userId}}&limit=10
Authorization: Bearer {{authToken}}

### Delete a category (replace REPLACE_WITH_CATEGORY_ID with actual category_id from response)
DELETE {{baseUrl}}/categories/REPLACE_WITH_CATEGORY_ID
Authorization: Bearer {{authToken}}

### List categories for user1
GET {{baseUrl}}/categories/user1