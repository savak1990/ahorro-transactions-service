@baseUrl=https://api-ahorro-transactions-savak.vkdev1.com
@authToken=eyJraWQiOiJUUWxvK1Y2cFk5ajhTdmtVUGcwR2RiSnRlWkppMkx4TWJtZ2lOZk44T0ZRPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIwMmM1MTRhNC0yMDIxLTcwOGQtZWZmZi1lYTZjZDVlNGVhYzkiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9pUllGUFk1WHYiLCJjb2duaXRvOnVzZXJuYW1lIjoiMDJjNTE0YTQtMjAyMS03MDhkLWVmZmYtZWE2Y2Q1ZTRlYWM5Iiwib3JpZ2luX2p0aSI6Ijk3NTliY2MwLWE0NWUtNDhkNy04NjdhLTcyZWE4MzAwNzQ0ZCIsImF1ZCI6IjRqbmY1cGNmcjdndm8ydnNlaWYzNmJ1NmsiLCJldmVudF9pZCI6ImU0NTIxYmJhLWE3MTAtNGYxZS04NjdjLWNkNzcwOTE0Y2FkOSIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNzUxMTExMDEyLCJuYW1lIjoiVmlhY2hlc2xhdiIsImV4cCI6MTc1MTExNDYxMiwiaWF0IjoxNzUxMTExMDEyLCJqdGkiOiI1OTU2ZGZiMS00NjI1LTRhOWQtOTIwNS00NTc5ZGRiMjQxODciLCJlbWFpbCI6InNsYXZhLmtsb3ZhbkBnbWFpbC5jb20ifQ.LwLhQ030aOoe6wNow7InW_GizHsNN0aiUzttiym-Xr6x-dKiF_xs_Qi8Wa7MS37YNBWxl0ZzwfTMP51ye7FUSVXHMz5LC3xUgS8st_hbnmEXShx3sic88OeSISDdB-MYklh-f6hMph00R2_yYpX9qC8iigACiFiE0x7immOVJpiK41IcA2sDPZMkA0GbxytwV4VQIsusYkJ0M6POhwNYvOc1VEdOLo-Ic9stw7pcTXm0cAgXIRa2N5UD2k66snvuwN5FAaxGDJ2ErYfRpeTnK1mboFvmwh1i2L9t7f8g9GpY8sGOf8ztcgFhO_bOiEHyFbI-9IxVJUu3miSrilpCHA

@userId=02c514a4-2021-708d-efff-ea6cd5e4eac9
@groupId=6a785a55-fced-4f13-af78-5c19a39c9abc
@balanceId=847ac10b-58cc-4372-a567-0e02b2c3d479

### Info
GET {{baseUrl}}/info

### Health Check
GET {{baseUrl}}/health

### Schema (Swagger UI Interface)
GET {{baseUrl}}/schema

### API Documentation (Alternative Swagger UI endpoint)
GET {{baseUrl}}/docs

### Schema Info
GET {{baseUrl}}/schema/info

### Schema Raw (YAML format)
GET {{baseUrl}}/schema/raw

### Schema JSON (JSON format)
GET {{baseUrl}}/schema/json

# To get auth token, use the following command:
# aws cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --client-id 4jnf5pcfr7gvo2vseif36bu6k --auth-parameters USERNAME=<user>,PASSWORD=<password>

# Available Category IDs (from seed data):
# c47ac10b-58cc-4372-a567-0e02b2c3d479 - "Groceries" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d480 - "Restaurants" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d481 - "Fast Food" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d482 - "Coffee & Tea" (Food & Dining)
# c47ac10b-58cc-4372-a567-0e02b2c3d485 - "Clothing" (Shopping)
# c47ac10b-58cc-4372-a567-0e02b2c3d486 - "Electronics" (Shopping)
# c47ac10b-58cc-4372-a567-0e02b2c3d48c - "Taxi & Rideshare" (Transportation)
# c47ac10b-58cc-4372-a567-0e02b2c3d493 - "Streaming Services" (Entertainment)
# c47ac10b-58cc-4372-a567-0e02b2c3d4a3 - "Salary" (Income)

### Create a new transaction with multiple entries
POST {{baseUrl}}/transactions
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "balanceId": "{{balanceId}}",
    "type": "expense",
    "merchant": "Mercadona",
    "transactedAt": "2024-06-19T12:00:00Z",
    "transactionEntries": [
        {
            "description": "Organic vegetables and fruits",
            "amount": 45.50,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d479"
        },
        {
            "description": "Household cleaning supplies",
            "amount": 28.75,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d487"
        },
        {
            "description": "Personal care products",
            "amount": 15.25,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d4a2"
        }
    ]
}

### Create a simple single-entry transaction
POST {{baseUrl}}/transactions
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "balanceId": "{{balanceId}}",
    "type": "income",
    "merchant": "Acme Corp Payroll",
    "approvedAt": "2024-06-19T09:00:00Z",
    "transactedAt": "2024-06-19T09:00:00Z",
    "transactionEntries": [
        {
            "description": "Monthly salary",
            "amount": 3500.00,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d484"
        }
    ]
}

### Create a movement transaction (transfer between accounts)
POST {{baseUrl}}/transactions
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "balanceId": "{{balanceId}}",
    "type": "movement",
    "merchant": null,
    "approvedAt": "2024-06-19T14:30:00Z",
    "transactedAt": "2024-06-19T14:30:00Z",
    "transactionEntries": [
        {
            "description": "Transfer to savings account",
            "amount": 500.00,
            "categoryId": "c47ac10b-58cc-4372-a567-0e02b2c3d4b1"
        }
    ]
}

### ============================================================
### TRANSACTION LISTING ENDPOINTS (Returns TransactionEntryDto)
### ============================================================
### The GET /transactions endpoint returns flattened transaction entries
### Each entry includes:
### - Transaction details (id, type, merchant, dates)
### - Balance details (title, currency)
### - Category details (name, image)
### - Entry-specific details (description, amount)
###
### Supported query parameters:
### - userId: Filter by user ID
### - groupId: Filter by group ID  
### - type: Filter by transaction type (income, expense, movement)
### - category: Filter by category name
### - sortedBy: Sort field (transactedAt, amount, createdAt)
### - order: Sort order (ASC, DESC)
### - count: Number of items per page (max 100, default 50)
### - startKey: Cursor for pagination (use nextKey from previous response)

### List transaction entries for a specific balance (basic)
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries with all filters
GET {{baseUrl}}/transactions?userId={{userId}}&groupId={{groupId}}&balanceId={{balanceId}}&type=expense&category=Groceries&sortedBy=transactedAt&order=DESC&count=10
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries by type (income only)
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}&type=income
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries by type (expense only)
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}&type=expense
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries by category
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}&category=Groceries
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries sorted by amount (ascending)
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}&sortedBy=amount&order=ASC&count=5
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries sorted by creation date (descending)
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}&sortedBy=transactedAt&order=DESC&count=20
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries with pagination
GET {{baseUrl}}/transactions?userId={{userId}}&balanceId={{balanceId}}&count=5
Content-Type: application/json
Authorization: Bearer {{authToken}}

### List transaction entries for specific group
GET {{baseUrl}}/transactions?groupId={{groupId}}&count=10
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Get a specific transaction
GET {{baseUrl}}/transactions/REPLACE_WITH_TRANSACTION_ID
Authorization: Bearer {{authToken}}

### Update a transaction
PUT {{baseUrl}}/transactions/REPLACE_WITH_TRANSACTION_ID
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "type": "expense",
    "amount": 120.00,
    "balanceId": "{{balanceId}}",
    "category": "Groceries",
    "description": "Updated groceries",
    "transactedAt": "2024-06-19T12:00:00Z"
}

### Delete a transaction
DELETE {{baseUrl}}/transactions/REPLACE_WITH_TRANSACTION_ID
Authorization: Bearer {{authToken}}

### Create a new balance
POST {{baseUrl}}/balances
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "currency": "EUR",
    "title": "Main Checking Account",
    "description": "Primary bank account for daily expenses"
}

### List balances for group
GET {{baseUrl}}/balances?groupId={{groupId}}
Authorization: Bearer {{authToken}}

### List balances by user
GET {{baseUrl}}/balances?userId={{userId}}
Authorization: Bearer {{authToken}}

### List balances for user
GET {{baseUrl}}/balances?userId={{userId}}
Authorization: Bearer {{authToken}}

### Get a specific balance
GET {{baseUrl}}/balances/{{balanceId}}
Authorization: Bearer {{authToken}}

### Update a balance
PUT {{baseUrl}}/balances/{{balanceId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "userId": "{{userId}}",
    "groupId": "{{groupId}}",
    "currency": "EUR",
    "title": "Updated Checking Account",
    "description": "Updated primary bank account for daily expenses"
}

### Delete a balance
DELETE {{baseUrl}}/balances/{{balanceId}}
Authorization: Bearer {{authToken}}

### Create a new category
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "name": "Restaurants",
    "imageUrl": "https://example.com/restaurant-icon.png"
}

### List categories
GET {{baseUrl}}/categories?userId={{userId}}&limit=10
Authorization: Bearer {{authToken}}

### Delete a category (replace REPLACE_WITH_CATEGORY_ID with actual category_id from response)
DELETE {{baseUrl}}/categories/REPLACE_WITH_CATEGORY_ID
Authorization: Bearer {{authToken}}

### List categories for user1
GET {{baseUrl}}/categories/user1

### ============================================================
### MERCHANT ENDPOINTS
### ============================================================

### Create a new merchant
POST {{baseUrl}}/merchants
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "name": "Mercadona",
    "description": "Spanish supermarket chain",
    "imageUrl": "https://example.com/mercadona-logo.png"
}

### List all merchants
GET {{baseUrl}}/merchants
Authorization: Bearer {{authToken}}

### List merchants with name filter
GET {{baseUrl}}/merchants?name=Mercadona&limit=10
Authorization: Bearer {{authToken}}

### Get a specific merchant
GET {{baseUrl}}/merchants/REPLACE_WITH_MERCHANT_ID
Authorization: Bearer {{authToken}}

### Update a merchant
PUT {{baseUrl}}/merchants/REPLACE_WITH_MERCHANT_ID
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
    "name": "Mercadona Updated",
    "description": "Updated Spanish supermarket chain description",
    "imageUrl": "https://example.com/mercadona-new-logo.png"
}

### Delete a merchant
DELETE {{baseUrl}}/merchants/REPLACE_WITH_MERCHANT_ID
Authorization: Bearer {{authToken}}